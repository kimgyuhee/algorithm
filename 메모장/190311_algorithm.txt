2019. 03. 11
참고문헌 https://o365skhu-my.sharepoint.com/:w:/r/personal/lsj_office_skhu_ac_kr/_layouts/15/Doc.aspx?sourcedoc=%7B1769DD0B-6DDF-4C61-B89C-B94FFE8338BA%7D&file=01%20%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%20%EC%84%A4%EA%B3%84%EC%99%80%20%EB%B6%84%EC%84%9D%EC%9D%98%20%EA%B8%B0%EC%B4%88.docx&action=default&mobileredirect=true

01 알고리즘 설계와 분석의 기초

알고리즘이란 무엇인가?
1) 알고리즘이란?
 * 문제 해결 절차를 체계적으로 기술한 것
 * 문제 요구 조건
	입력과 출력으로 명시할 수 있다.
	알고리즘은 입력으로부터 출력을 만드는 과정을 기술한 것

알고리즘 기술 방식
	추상적 기술 vs 구체적 기술
<장점>
간결해서 읽기 편하다 vs 내용이 자세하고 어떻게 구현할지 명확하다.
<단점>
내용이 자세하지 않아서 어떻게 구현할지 명확하지 않을 수 있다.
			vs
간결하지 않아서 한눈에 파악하기 어렵다.

재귀 호출

재귀와 귀납적 사고
재쥐(recursion) = 재귀 호출(recursive call) = 자기 호출

재귀적 문제 
어떤 문제를 작은 문제들로 쪼개어 해결해도 결과는 동일하자.
그리고 쪼개진 작은 문제들은 n의 값만 작을뿐 문제의 성격이 같다.

점근적 표기법
1) 점근적 분석(asymptotic analysis)
알고리즘 분석이 입력의 크기가 충분히 클때에 대해서 분석한다.

2) 알고리즘 수행시간
성능순
1 > logN > N > NlogN > N2(제곱) > N3(세제곱) > 2N(제곱)


02 점화식과 점근적 복잡도 분석

1. 재귀 알고리즘 분석
1) 이진 탐색 
알고리즘 : 입력 배열의 중간 값돠 찾을 값을 비교한다. [현재의 값 비교]
	비교 결과 찾을 값이 크면, 중간값을 기준으로 뒤쪽에서 찾는다.
	찾을 값이 작으면, 중간 값을 기준으로 앞쪽에서 찾는다.
	값이 동일하면 찾기 종료 [종료의 조건]

점근적 분석 O(logN)

2) 정렬 알고리즘(merge)
알고리즘 : (1) 배열 A를 중간에서 반으로 쪼갠다.
	쪼개진 배열의 앞부분을 A1, 뒷부분을 A2라고 하자.
	A1, A2의 크기는 n/2이다.
	(2) A1을 정렬한다. (재귀호출)
	(3) A2를 정렬한다. (재귀호출)
	(4) 정렬된 A1과 A2를 병합한다.

점근적 분석 : 배열을 반으로 쪼개는 비용 O(1)
	    배열의 크기가 1이 될 때까지 쪼개려면 한 번 쪼갤 때마다 배열의 크기는 반으로 준다.
	    => O(logN)
	    두 배열을 하나로 병합하는 비용 O(n)
따라서 O(NlogN)

2. 점화식
1) 재귀와 귀납적(inductive : 실증적인 추론을 하는 것) 사고

2) 재귀호출과 점화식
재귀호출 알고리즘을 수학 방정식으로 표현한 것이 점화식

<<merge sort 알고리즘>>
mergeSort ( A[ ], start, end ) {
	if ( start < end ) then {
		middle = (start + end)/2;
		mergeSort ( A, start, middle );
		mergeSort ( A, middle+1, end);
		merge ( A, start, middle, end );
	}
}
