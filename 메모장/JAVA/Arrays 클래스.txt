<<<<< Arrays 클래스 >>>>>

# 학습목표
- 가변 파라미터 메소드 문법
- Arrays 클래스 메소드 목록
- Arrays 클래스를 활용하여 배열의 정렬 구현 
- Arrays 클래스를 활용하여 배열의 이진탐색 구현
- Comparator 인터페이스 활용


---------------------------------------------------------------------------------------------------

## 내용을 보기 전 내가 아는 지식

- 고정 파라미터 변수는 가변 파라미터 변수 앞에 존재해야한다.


---------------------------------------------------------------------------------------------------


-> 가변 파라미터 메소드란 ? 파라미터 수가 고정되어 있지 않는 메소드를 가변 파라미터 메소드
	라고 부른다. EX) System.out.printf 메소드

-> 유틸러티 클래스 , 핼퍼 클래스
	: 프로젝트를 구현할 때 필수 항목이 입력되었는지 검사할 일이 종종있다.
	EX)
	String s = textField.getText();
	if ( s == null s.trim().length() == 0 )
		errorMessage = "내용을 입력하세요";

-> 어떤 클래스에 메소드를 추가하려고 할 때, 만약 그 클래스를 수정할 수 없다면, 자식 클래스를
	만들어서 메소드를 추가로 구현하면 된다.

	EX) class MyString extend String {
		public static boolean isNullOrEmpty(String s) {
			return s == null || s.length()==0;
		}

		public static boolean isNullOrBlank(String s ) {
			return s == null || s.trim().length() ==0;
		}

	}

-> 자식클래스를 만들어서 메소드를 추가로 구현하는 것이, 어떤 이유 때문에 적절하지 않다면,
	유틸러티 클래스를 만들어서 메소드를 추가로 구현한다.

	EX) class StringUtils { }

	-> StringUtils 클래스의 모든 메소드는 static 메소드임에 주목하자
	-> StringUtils 클래스의 모든 메소드는, StringUtils 클래스의 멤버 변수를 사용할 일이 없음

-> 유틸러티 클래스의 이름은 Strings 이거나 StringUtils 형태인것이 관례이다.

-> Arrays 클래스는 유틸러티 클래스이다.
	- Arrays 클래스의 메소드는 this 객체에 어떤 작업을 하는 메소드가 아니고,
		첫째 파라미터로 받은 배열에 대해서 어떤 작업을 하는 메소드이다.
		그래서 Arrays 클래스의 메소드는 this 객체를 사용하지 않기 때문에
		static 메소드이다.




